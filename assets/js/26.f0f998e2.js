(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{317:function(a,e,s){"use strict";s.r(e);var o=s(13),t=Object(o.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"teste-de-fumaca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#teste-de-fumaca"}},[a._v("#")]),a._v(" Teste de Fumaça")]),a._v(" "),e("p",[a._v("Técnica que verifica se a versão implantada do software está estável ou não.")]),a._v(" "),e("p",[a._v("Consiste em uma bateria mínima de teste aplicadas a cada build do software para verificar suas funcionalidades.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('Também conhecido como "Teste de Verificação da Build" ou "Teste de Confiança".\n')])])]),e("p",[a._v("Em termos simples o teste de fumaça valida se as features vitais estão funcionando e se não existem quaisquer showstoppers na build sob testes.")]),a._v(" "),e("p",[a._v("É um pequeno e rápido teste de regressão apenas para testar as principais funcionalidades, de forma a determinar se a build esta falha a ponto de tornar demais testes um desperdício de tempo e recursos.")]),a._v(" "),e("h2",{attrs:{id:"teste-de-fumaca-x-teste-de-sanidade"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#teste-de-fumaca-x-teste-de-sanidade"}},[a._v("#")]),a._v(" Teste de Fumaça x Teste de Sanidade")]),a._v(" "),e("ul",[e("li",[e("em",[a._v("Teste de fumaça")]),a._v(" verifica funcionalidades críticas enquanto o "),e("em",[a._v("Teste de Sanidade")]),a._v(" verifica novas funcionalidades como bug fixes.")]),a._v(" "),e("li",[e("em",[a._v("Teste de fumaça")]),a._v(" é documentado ou roteirizado, enquanto o "),e("em",[a._v("Teste de Sanidade")]),a._v(", não é.")]),a._v(" "),e("li",[a._v("O "),e("em",[a._v("Teste de Fumaça")]),a._v(" verifica a totalidade do sistema do começo ao fim, enquanto o "),e("em",[a._v("Teste de Sanidade")]),a._v(" verifica apenas um componente individual.")])]),a._v(" "),e("h2",{attrs:{id:"quando-aplicar-o-teste-de-fumaca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quando-aplicar-o-teste-de-fumaca"}},[a._v("#")]),a._v(" Quando aplicar o Teste de Fumaça?")]),a._v(" "),e("p",[a._v("Aplicado sempre que novas funcionalidades forem desenvolvidas e integradas com uma build já existente, que é então implantada no ambiente de QA, garantindo que todas as funcionalidades estejam, ou não, funcionando perfeitamente.")]),a._v(" "),e("img",{attrs:{src:"https://www.guru99.com/images/3-2016/032816_1308_SmokeTestin1.png",alt:"Fluxograma Testes"}}),a._v(" "),e("p",[a._v("Caso a build seja positivamente verificada pelo time de QA no Teste de Fumaça, a equipe continua com a testagem funcional.")]),a._v(" "),e("h3",{attrs:{id:"quais-os-motivos-para-aplicar-o-teste-de-fumaca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quais-os-motivos-para-aplicar-o-teste-de-fumaca"}},[a._v("#")]),a._v(" Quais os motivos para aplicar o Teste de Fumaça?")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Todos os showstoppers serão identificados aqui;")])]),a._v(" "),e("li",[e("p",[a._v("É feito após uma build ser encaminhada ao QA. Assim a maioria dos defeitos são identificados em estágios iniciais do desenvolvimento de software;")])]),a._v(" "),e("li",[e("p",[a._v("Com o teste de fumaça, nós simplificamos a detecção e correção dos principais defeitos;")])])]),a._v(" "),e("h2",{attrs:{id:"como-aplicar-o-teste-de-fumaca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#como-aplicar-o-teste-de-fumaca"}},[a._v("#")]),a._v(" Como aplicar o Teste de Fumaça?")]),a._v(" "),e("p",[a._v("Esta técnica é, geralmente, feita de forma manual embora exista a possibilidade de atingir o mesmo efeito através da automação. Pode variar de empresa pra empresa.")]),a._v(" "),e("ul",[e("li",[e("p",[e("strong",[a._v("Testagem Manual:")]),a._v("\nRealizado para garantir que a navegação de paths críticos esteja operando como esperando e não impeça a funcionalidade.\nUma vez que a build é encaminhada ao QA, casos de teste de alta prioridade devem ser tomados para localizar defeitos principais no sistema.\nCaso a build seja aprovada, contniuamos a testagem funcional. Caso o teste falhe, a build é rejeitada e encaminhada de volta a equipe de desenvolvimento, recomeçando o ciclo.")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Testagem Automatizada")]),a._v("\nA automatização é utilizada para a testagem de regressão, entretanto, podemos também aplicá-la para casos de teste desta modalidade, agilizando todo o processo de verificação de novas builds.\nAo invés do processo ineficiente de repetir todos os testes sempre que uma nova build for implementada, podemos automatizar os passos necessários, poupando tempo e recursos.")]),a._v(" "),e("img",{attrs:{src:"https://www.guru99.com/images/3-2016/032816_1308_SmokeTestin2.png",alt:"Fluxograma Ciclo Testagem"}})])])])}),[],!1,null,null,null);e.default=t.exports}}]);