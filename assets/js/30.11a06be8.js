(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{321:function(e,a,o){"use strict";o.r(a);var s=o(13),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"teste-de-performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#teste-de-performance"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Teste de Performance")])]),e._v(" "),a("p",[e._v("Teste de performance é um subgrupo da Engenharia de Performance, é um processo de avaliar o comportamento de um sistema sob diversas condições extremas.")]),e._v(" "),a("p",[e._v("O principal objetivo é monitorer e melhorar indicadores chave de performance, como tempo de resposta, taxa de transferência, memória, uso de CPU e mais.")]),e._v(" "),a("p",[e._v("Os três objetivos são:")]),e._v(" "),a("ul",[a("li",[e._v("Velocidade: Tempo de resposta a requests;")]),e._v(" "),a("li",[e._v("Escalabilidade: Carga de usuários máxima que a aplicação aguenta;")]),e._v(" "),a("li",[e._v("Estabilidade: Determina se a API é estável sob diversas cargas;")])]),e._v(" "),a("h2",{attrs:{id:"por-que-aplicar-o-teste-de-performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#por-que-aplicar-o-teste-de-performance"}},[e._v("#")]),e._v(" Por Que Aplicar o Teste de Performance?")]),e._v(" "),a("p",[e._v("Features e Funcionalidades suportadas por um software não são as únicas preocupações. A performance de  uma API, como o seu tempo de resposta, confiabilidade, uso de recursos e escalabilidade, também importam.")]),e._v(" "),a("p",[e._v("O objetivo não é localizar bugs mas sim eliminar gargalos de performance.")]),e._v(" "),a("p",[e._v("O teste é aplicado para prover os investidores com informações sobre suas aplicações, acerca dos fatores de performance. E, mais importante, o teste revela o que precisa ser melhorado antes do produto ir a mercado.")]),e._v(" "),a("p",[e._v("Sem este teste, o software provavelmente sofreria de problemas como, baixo desempenho sob stress, inconsistências entre diferentes sistemas operacionais e baixa usabilidade.")]),e._v(" "),a("p",[e._v("O teste determinará se o software atinge parâmetros de performance sob cargas de trabalho previstas. Aplicações enviadas ao mercados com baixas métricas de performance devido a testagem inexistente ou inadequada irão, provavelmente, adquirir uma má reputação, e não atingir seus objetivos de vendas.")]),e._v(" "),a("p",[e._v("Além disso,aplicações críticas como programas de lançamento espacial, equipamentos médicos e etc devem ser testados para performance a fim de garantir funcionalidade plena.")]),e._v(" "),a("h3",{attrs:{id:"tipos-de-teste-de-performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tipos-de-teste-de-performance"}},[e._v("#")]),e._v(" Tipos de Teste de Performance")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Teste de Carga: Checa a capacidade da aplicação de performar sob cargas de usuários "),a("strong",[e._v("previsíveis")]),e._v(", para identificar gargalos antes que a aplicação seja lançada;")])]),e._v(" "),a("li",[a("p",[e._v("Teste de Stress: Envolve tester a aplicação sob cargas "),a("strong",[e._v("extremas")]),e._v(", para auferir como o sistema lida com o tráfego e processamento de dados. O objetivo é identificar o ponto de ruptura da aplicação;")])]),e._v(" "),a("li",[a("p",[e._v("Teste de Spike: Testa a reação do software frente a um pico súbito na carga gerada por usuários;")])]),e._v(" "),a("li",[a("p",[e._v("Teste de Resistência: É feito para garantir que o software consiga lidar com a carga prevista durante um longo período de tempo;")])]),e._v(" "),a("li",[a("p",[e._v("Teste de Volume: Vasta quantidade de dados é inserida no database e o comportamento geral do sistema é monitorado. O objetivo é checar a performance em níveis diferentes de volumes na database;")])]),e._v(" "),a("li",[a("p",[e._v("Teste de Escalabilidade: Determina a efetividade do software sob cargas crescentes, de forma a comportar um aumento no número de usuários. Isto ajuda a planejar melhorias de capacidade para o sistema;")])]),e._v(" "),a("li",[a("p",[e._v("Teste de Capacidade")])])]),e._v(" "),a("h2",{attrs:{id:"problemas-de-performance-comuns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#problemas-de-performance-comuns"}},[e._v("#")]),e._v(" Problemas de Performance Comuns")]),e._v(" "),a("p",[e._v("A maioria dos problemas de performance giram em torno de velocidade, tempo de resposta, tempo de load e baixa escalabilidade. A velocidade, é um dos atributos mais importante, uma aplicação lenta vai perder potenciais usuários. O teste de performance garante que um aplicativo seja executado rápido o suficiente para manter a atenção e interesse de um usuário. Na seguinte lista  verificamos como a velocidade é um problema constante.")]),e._v(" "),a("ul",[a("li",[e._v("Alto Tempo de Carregamento: Tempo de load é normalmente o período que uma aplicação leva para iniciar, ele deveria, geralmente, ser o menor possível. Enquanto algumas aplicações são impossíveis de serem iniciadas em menos de um minuto, o tempo de carregamento deveria ficar abaixo de alguns segundos se possível;")]),e._v(" "),a("li",[e._v("Tempo de Resposta Inadequado: Aqui tratamos do tempo que leva entre um input do usuário e o output da aplicação para este input. Geralmente deveria ser muito rápido, pois novamente, se a espera for longa, o usuário perde interesse;")]),e._v(" "),a("li",[e._v("Baixa Escalabilidade: Um produto software sofre de baixa escalabilidade quando ele não suporta o número previsto de usuário ou quando não acomoda um espectro satisfatório de usuários;")]),e._v(" "),a("li",[e._v("Gargalo: São obstruções em um sistema que degradam a performance geral. Acontecem quando erros de código ou hardware causam uma diminuição na taxa de transferência sob certas cargas. A chave para localizar um problema de gargalo é encontrar a seção de código que gera a lentidão, e corrigí-la. O gargalo é comumente solucionado ao corrigir as linhas de código ou adicionar hardware. Alguns comuns são:\n"),a("ul",[a("li",[e._v("Uso de CPU;")]),e._v(" "),a("li",[e._v("Uso de Memória;")]),e._v(" "),a("li",[e._v("Uso de Network;")]),e._v(" "),a("li",[e._v("Limitações do Sistema Operacional;")]),e._v(" "),a("li",[e._v("Uso de Disco;")])])])]),e._v(" "),a("h2",{attrs:{id:"como-aplicar-o-teste-de-performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#como-aplicar-o-teste-de-performance"}},[e._v("#")]),e._v(" Como Aplicar o Teste de Performance")]),e._v(" "),a("p",[e._v("A metodologia adota para testes de performance podem variar, mas objetivo permanece.")]),e._v(" "),a("p",[e._v("Fluxograma genérico do teste de performance:")]),e._v(" "),a("img",{attrs:{src:"https://www.guru99.com/images/performance_testing_process.png",alt:"Fluxograma Performance"}}),e._v(" "),a("ol",[a("li",[e._v("Identificar o Ambiente de Testes:\nConheça o seu ambiente físico de testes, de produção e quais ferramentes de testes estão disponíveis. Entenda detalhes do hardware, software e configurações de networks usadas durante a testagem, antes de inicia-la. Este processo promove uma maior eficiência.")]),e._v(" "),a("li",[e._v("Identifique os Critérios de Aceite da Performance:\nIsto inclui objetivos e restrições da taxa de transferência, tempos de resposta e aloção de recuros. Também é necessário para identificar os critérios de sucesso do projeto além destes objetivos e restrições. Testers tambem devem estar empoderados para definir os critérios de performance e objetivos, uma vez que, geralmente, as especificações do projeto não incluirão uma variedade ampla o suficiente de benchmarks para performance. Quando possível encontrar uma aplicação similar para de fins de comparação pode auxiliar na definição dos objetivos de performance.")]),e._v(" "),a("li",[e._v("Planejamento e Design dos Testes de Performance:\nDetermine o quanto a usabilidade irá variar entre os usuários finais para identificar cenários chave de testes para todos os casos de uso possíveis. É necessário simular uma variedade de usuários finais, planejar os dados para testes de performance e delimitar quais métricas serão coletadas.")]),e._v(" "),a("li",[e._v("Configuração do Ambiente de Testes:\nPrepare o ambiente de testes antes de sua execução, além disso, organize ferramentas e demais recursos.")]),e._v(" "),a("li",[e._v("Implemente o Design de Testes:\nCrie os testes de performance de acordo com o seu design original.")]),e._v(" "),a("li",[e._v("Execute os Testes")]),e._v(" "),a("li",[e._v("Analise, Ajuste e Reteste:\nConsolide, analise e compartilhe os resultados dos testes. Então, ajuste de forma específica e retestes para observar se existem melhorias ou declínios na performance. Uma vez que melhorias geralmente diminuem a cada teste, pare quando o gargalo é causado pela CPU. Para então poder considerar a opção de aumento do poder da CPU.")])]),e._v(" "),a("h2",{attrs:{id:"metricas-do-teste-de-performance-parametros-monitorados"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metricas-do-teste-de-performance-parametros-monitorados"}},[e._v("#")]),e._v(" Métricas do Teste de Performance: Parâmetros Monitorados")]),e._v(" "),a("ul",[a("li",[e._v("Uso do Processador: A quantidade de tempo que um processador gasta executando threads ativas;")]),e._v(" "),a("li",[e._v("Uso de Memória: Espaço físico disponível em memória para processos no computador;")]),e._v(" "),a("li",[e._v("Tempo de Disco: Período em que o disco ocupa-se para executar uma request de leitura ou escrita (read/write);")]),e._v(" "),a("li",[e._v("Bytes Privados: número de bytes que um processo alocou que não podem ser compartilhados entre demais processos. Estes são utilizados para medir vazamentos e uso de memória.")]),e._v(" "),a("li",[e._v("Memória Dedicada: quantidade de memória virtual utilizada;")]),e._v(" "),a("li",[e._v("Memory pages por segundo: Número de páginas escritas ou lidas a partir do disco com o objetivo de resolver falhas graves na página. Falhas graves identificam-se quando um código que não do grupo atualmente sob teste recebe um call de algum outro lugar e é buscado de um disco;")]),e._v(" "),a("li",[e._v("Falhas na Página por Segundo: A taxa geral em que falhas são processadas pelo processador. Novamente, ocorrem quando um processo requer código de fora do grupo sob teste;")]),e._v(" "),a("li",[e._v("Interrupções da CPU por Segundos: Número médio de interrupções no hardware que um processador esta recebendo e processando a cada segundo;")]),e._v(" "),a("li",[e._v("Comprimenta da Fila do Disco: Número médio de requests para read e writes na fila para o disco selecionado durante uma amostragem de tempo;")]),e._v(" "),a("li",[e._v("Comprimento da Fila do Output na Network: Comprimento da fila dos pacotes de output. Qualquer coisa superior a 2 significa um delay, e o gargalo precisa ser solucionado")]),e._v(" "),a("li",[e._v("Total de Bytes na Network por Segundo: Taxa em que bytes são enviados e recebidos na interface, incluindo caracteres de enquadramento;")]),e._v(" "),a("li",[e._v("Tempo de Resposta: Tempo entre a request do usuário e o recebimento do primeiro caracter da resposta;")]),e._v(" "),a("li",[e._v("Taxa de Transferência: Taxa em que um computador ou rede recebe requests por segundo;")]),e._v(" "),a("li",[e._v("Quantidade do Pool de Conexões: Número de requests de usuários que são atentidas por um pool de conexões. Quanto mais requests são atendidos por conexões na pool, melhor é a performance;")]),e._v(" "),a("li",[e._v("Máximo de Sessões Ativas;")]),e._v(" "),a("li",[e._v("Taxas de Acerto: Tem a ver com o número de statements SQL processados por dados em cache ao invez de operações I/O caras. Aqui é um bom ponto de partida para soluções de gargalo")]),e._v(" "),a("li",[e._v("Acertos por Segundo: O número de acertos um servidor web durante cada segundo de um teste de carga;")]),e._v(" "),a("li",[e._v("Segmento de Reversão: Quantidade de dados que podem ser revertidos a qualquer momento;")]),e._v(" "),a("li",[e._v("Travas da Database: O trancamento de tables e databases precisão ser monitorados e ajustados com cuidado;")]),e._v(" "),a("li",[e._v("Maiores Esperas: São monitoradas para determinar quais tempos de espera podem ser diminuídos ao lidas com o quão rápido os dados são buscados na memória;")]),e._v(" "),a("li",[e._v("Contagem de Threads: A saúde de uma aplicação pode ser medida pelo número de threads que estão ativas e em execução;")]),e._v(" "),a("li",[e._v("Coleta de Lixo: Refere-se ao retorno de memória não utilizada de volta ao sistema. A coleta de lixo precisa ser monitorada para eficiência;")])]),e._v(" "),a("h2",{attrs:{id:"exemplos-de-casos-de-teste"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exemplos-de-casos-de-teste"}},[e._v("#")]),e._v(" Exemplos de Casos de Teste")]),e._v(" "),a("ol",[a("li",[e._v("Verifique que o tempo de resposta é de não mais que 4 segundos quando 1000 usuários acessarem o site simultâneamente;")]),e._v(" "),a("li",[e._v("Verifique se o tempo de resposta da aplicação sob carga esta dentro dos parâmetros aceitáveis quando a conectivade da rede está baixa;")]),e._v(" "),a("li",[e._v("Cheque qual o número máximo de usuários que a aplicação aguenta antes de crashar;")]),e._v(" "),a("li",[e._v("Verifique o tempo de execução do banco de dados quando 500 registros são lidos/escritos simultâneamente;")]),e._v(" "),a("li",[e._v("Verifique a CPU e uso de memória da aplicação e database em condições de pico da carga;")]),e._v(" "),a("li",[e._v("Valide o tempo de resposta da aplicação sob condições de carga baixas, normais, moderadas e excessivas;")])]),e._v(" "),a("h2",{attrs:{id:"ferramentas-para-teste-de-performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ferramentas-para-teste-de-performance"}},[e._v("#")]),e._v(" Ferramentas para Teste de Performance")]),e._v(" "),a("p",[e._v("Algumas das ferramentas mais populares para teste de performance são:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://bit.ly/3knoPpQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("LoadNinja"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://bit.ly/3D8p93N",target:"_blank",rel:"noopener noreferrer"}},[e._v("HeadSpin"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://guru99.live/vVYFyu",target:"_blank",rel:"noopener noreferrer"}},[e._v("BlazeMeter"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.guru99.com/loadrunner-v12-tutorials.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HPLoadRunner"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.guru99.com/jmeter-tutorials.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JMeter"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);